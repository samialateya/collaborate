{"version":3,"file":"index.es.js","sources":["../compiled/hooks/useLottie.js","../compiled/hooks/useLottieInteractivity.js","../compiled/components/Lottie.js","../compiled/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState, } from \"react\";\nimport lottie from \"lottie-web\";\nconst useLottie = (props, style) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, \n    // Specified here to take them out from the 'rest'\n    lottieRef, renderer, name, assetsPath, rendererSettings, \n    // TODO: find a better way to extract the html props to avoid specifying\n    //  all the props that we want to exclude (as you can see above)\n    ...rest } = props;\n    const [animationLoaded, setAnimationLoaded] = useState(false);\n    const animationInstanceRef = useRef();\n    const animationContainer = useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n    /**\n     * Play\n     */\n    const play = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n    const stop = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n    const pause = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n    const setSpeed = (speed) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n    const setDirection = (direction) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n    const playSegments = (segments, forceFlag) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n    const setSubframe = (useSubFrames) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => {\n        var _a;\n        return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);\n    };\n    /**\n     * Destroy animation\n     */\n    const destroy = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        return;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n    const loadAnimation = (forcedConfigs = {}) => {\n        var _a;\n        // Return if the container ref is null\n        if (!animationContainer.current) {\n            return;\n        }\n        // Destroy any previous instance\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Build the animation configuration\n        const config = {\n            ...props,\n            ...forcedConfigs,\n            container: animationContainer.current,\n        };\n        // Save the animation instance\n        animationInstanceRef.current = lottie.loadAnimation(config);\n        setAnimationLoaded(!!animationInstanceRef.current);\n    };\n    /**\n     * Initialize and listen for changes that affect the animation state\n     */\n    // Reinitialize when animation data changed\n    useEffect(() => {\n        loadAnimation();\n    }, [animationData]);\n    // Update the loop state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        animationInstanceRef.current.loop = !!loop;\n        if (loop && animationInstanceRef.current.isPaused) {\n            animationInstanceRef.current.play();\n        }\n    }, [loop]);\n    // Update the autoplay state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]);\n    // Update the initial segment state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        // When null should reset to default animation length\n        if (!initialSegment) {\n            animationInstanceRef.current.resetSegments(false);\n            return;\n        }\n        // If it's not a valid segment, do nothing\n        if (!Array.isArray(initialSegment) || !initialSegment.length) {\n            return;\n        }\n        // If the current position it's not in the new segment\n        // set the current position to start\n        if (animationInstanceRef.current.currentRawFrame < initialSegment[0] ||\n            animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n            animationInstanceRef.current.currentRawFrame = initialSegment[0];\n        }\n        // Update the segment\n        animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n    /**\n     * Reinitialize listener on change\n     */\n    useEffect(() => {\n        const partialListeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const listeners = partialListeners.filter((listener) => listener.handler != null);\n        if (!listeners.length) {\n            return;\n        }\n        const deregisterList = listeners.map(\n        /**\n         * Handle the process of adding an event listener\n         * @param {Listener} listener\n         * @return {Function} Function that deregister the listener\n         */\n        (listener) => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\n            // Return a function to deregister this listener\n            return () => {\n                var _a;\n                (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n            };\n        });\n        // Deregister listeners on unmount\n        return () => {\n            deregisterList.forEach((deregister) => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * Build the animation view\n     */\n    const View = React.createElement(\"div\", { style: style, ref: animationContainer, ...rest });\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        getDuration,\n        destroy,\n        animationContainerRef: animationContainer,\n        animationLoaded,\n        animationItem: animationInstanceRef.current,\n    };\n};\nexport default useLottie;\n","import { useEffect } from \"react\";\n// helpers\nexport function getContainerVisibility(container) {\n    const { top, height } = container.getBoundingClientRect();\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    return current / max;\n}\nexport function getContainerCursorPosition(container, cursorX, cursorY) {\n    const { top, left, width, height } = container.getBoundingClientRect();\n    const x = (cursorX - left) / width;\n    const y = (cursorY - top) / height;\n    return { x, y };\n}\nexport const useInitInteractivity = ({ wrapperRef, animationItem, mode, actions, }) => {\n    useEffect(() => {\n        const wrapper = wrapperRef.current;\n        if (!wrapper || !animationItem) {\n            return;\n        }\n        animationItem.stop();\n        const scrollModeHandler = () => {\n            let assignedSegment = null;\n            const scrollHandler = () => {\n                const currentPercent = getContainerVisibility(wrapper);\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ visibility }) => visibility &&\n                    currentPercent >= visibility[0] &&\n                    currentPercent <= visibility[1]);\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                if (action.type === \"seek\" &&\n                    action.visibility &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const frameToGo = action.frames[0] +\n                        Math.ceil(((currentPercent - action.visibility[0]) /\n                            (action.visibility[1] - action.visibility[0])) *\n                            action.frames[1]);\n                    //! goToAndStop must be relative to the start of the current segment\n                    animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n                }\n                if (action.type === \"loop\") {\n                    // Loop: Loop a given frames\n                    if (assignedSegment === null) {\n                        // if not playing any segments currently. play those segments and save to state\n                        animationItem.playSegments(action.frames, true);\n                        assignedSegment = action.frames;\n                    }\n                    else {\n                        // if playing any segments currently.\n                        //check if segments in state are equal to the frames selected by action\n                        if (assignedSegment !== action.frames) {\n                            // if they are not equal. new segments are to be loaded\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                        else if (animationItem.isPaused) {\n                            // if they are equal the play method must be called only if lottie is paused\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                    }\n                }\n                if (action.type === \"play\" && animationItem.isPaused) {\n                    // Play: Reset segments and continue playing full animation from current position\n                    animationItem.resetSegments(true);\n                    animationItem.play();\n                }\n                if (action.type === \"stop\") {\n                    // Stop: Stop playback\n                    animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n                }\n            };\n            document.addEventListener(\"scroll\", scrollHandler);\n            return () => {\n                document.removeEventListener(\"scroll\", scrollHandler);\n            };\n        };\n        const cursorModeHandler = () => {\n            const handleCursor = (_x, _y) => {\n                let x = _x;\n                let y = _y;\n                // Resolve cursor position if cursor is inside container\n                if (x !== -1 && y !== -1) {\n                    // Get container cursor position\n                    const pos = getContainerCursorPosition(wrapper, x, y);\n                    // Use the resolved position\n                    x = pos.x;\n                    y = pos.y;\n                }\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ position }) => {\n                    if (position &&\n                        Array.isArray(position.x) &&\n                        Array.isArray(position.y)) {\n                        return (x >= position.x[0] &&\n                            x <= position.x[1] &&\n                            y >= position.y[0] &&\n                            y <= position.y[1]);\n                    }\n                    if (position &&\n                        !Number.isNaN(position.x) &&\n                        !Number.isNaN(position.y)) {\n                        return x === position.x && y === position.y;\n                    }\n                    return false;\n                });\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                // Process action types:\n                if (action.type === \"seek\" &&\n                    action.position &&\n                    Array.isArray(action.position.x) &&\n                    Array.isArray(action.position.y) &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const xPercent = (x - action.position.x[0]) /\n                        (action.position.x[1] - action.position.x[0]);\n                    const yPercent = (y - action.position.y[0]) /\n                        (action.position.y[1] - action.position.y[0]);\n                    animationItem.playSegments(action.frames, true);\n                    animationItem.goToAndStop(Math.ceil(((xPercent + yPercent) / 2) *\n                        (action.frames[1] - action.frames[0])), true);\n                }\n                if (action.type === \"loop\") {\n                    animationItem.playSegments(action.frames, true);\n                }\n                if (action.type === \"play\") {\n                    // Play: Reset segments and continue playing full animation from current position\n                    if (animationItem.isPaused) {\n                        animationItem.resetSegments(false);\n                    }\n                    animationItem.playSegments(action.frames);\n                }\n                if (action.type === \"stop\") {\n                    animationItem.goToAndStop(action.frames[0], true);\n                }\n            };\n            const mouseMoveHandler = (ev) => {\n                handleCursor(ev.clientX, ev.clientY);\n            };\n            const mouseOutHandler = () => {\n                handleCursor(-1, -1);\n            };\n            wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n            wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n            return () => {\n                wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n                wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n            };\n        };\n        switch (mode) {\n            case \"scroll\":\n                return scrollModeHandler();\n            case \"cursor\":\n                return cursorModeHandler();\n        }\n    }, [mode, animationItem]);\n};\nconst useLottieInteractivity = ({ actions, mode, lottieObj, }) => {\n    const { animationItem, View } = lottieObj;\n    useInitInteractivity({ actions, animationItem, mode, wrapperRef: lottieObj.animationContainerRef });\n    return View;\n};\nexport default useLottieInteractivity;\n","import { useEffect } from \"react\";\nimport useLottie from \"../hooks/useLottie\";\nimport useLottieInteractivity from \"../hooks/useLottieInteractivity\";\nconst Lottie = (props) => {\n    var _a;\n    const { style, interactivity, ...lottieProps } = props;\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    const { View, play, stop, pause, setSpeed, goToAndStop, goToAndPlay, setDirection, playSegments, setSubframe, getDuration, destroy, animationContainerRef, animationLoaded, animationItem, } = useLottie(lottieProps, style);\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n    useEffect(() => {\n        if (props.lottieRef) {\n            props.lottieRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                getDuration,\n                destroy,\n                animationContainerRef,\n                animationLoaded,\n                animationItem,\n            };\n        }\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    if (interactivity) {\n        return useLottieInteractivity({\n            lottieObj: {\n                View,\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndStop,\n                goToAndPlay,\n                setDirection,\n                playSegments,\n                setSubframe,\n                getDuration,\n                destroy,\n                animationContainerRef,\n                animationLoaded,\n                animationItem,\n            },\n            ...interactivity,\n        });\n    }\n    return View;\n};\nexport default Lottie;\n","import LottiePlayer from \"lottie-web\";\nimport Lottie from \"./components/Lottie\";\nimport useLottie from \"./hooks/useLottie\";\nimport useLottieInteractivity from \"./hooks/useLottieInteractivity\";\n// TODO: For backward compatibility, remove on v2\nexport const Animator = Lottie;\nexport const useAnimator = useLottie;\nexport { LottiePlayer, useLottie, useLottieInteractivity };\nexport default Lottie;\nexport * from \"./types\";\n"],"names":["useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","lottieRef","renderer","name","assetsPath","rendererSettings","rest","useState","animationLoaded","setAnimationLoaded","animationInstanceRef","useRef","animationContainer","play","_a","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segments","forceFlag","setSubframe","useSubFrames","getDuration","inFrames","destroy","loadAnimation","forcedConfigs","config","container","lottie","useEffect","isPaused","resetSegments","Array","isArray","length","currentRawFrame","setSegment","partialListeners","handler","listeners","filter","listener","deregisterList","map","addEventListener","removeEventListener","forEach","deregister","View","React","createElement","ref","animationContainerRef","animationItem","getContainerVisibility","getBoundingClientRect","top","height","window","innerHeight","max","getContainerCursorPosition","cursorX","cursorY","left","width","x","y","useInitInteractivity","wrapperRef","mode","actions","wrapper","scrollModeHandler","assignedSegment","scrollHandler","currentPercent","action","find","visibility","type","frames","frameToGo","Math","ceil","firstFrame","document","cursorModeHandler","handleCursor","_x","_y","pos","position","Number","isNaN","xPercent","yPercent","mouseMoveHandler","ev","clientX","clientY","mouseOutHandler","useLottieInteractivity","lottieObj","Lottie","interactivity","lottieProps","Animator","useAnimator"],"mappings":"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"}